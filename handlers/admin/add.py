from hashlib import md5
from typing import Tuple, List


from aiogram.dispatcher import FSMContext
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types import CallbackQuery, ReplyKeyboardMarkup
from aiogram.types.chat import ChatActions
from aiogram.utils.callback_data import CallbackData

from loader import dp, db, bot
from filters import IsAdmin
from handlers.user.menu import settings
from states import CategoryState


# –û–ø—Ä–µ–¥–µ–ª—è—é —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á—É –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É.
# –ü–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ - —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–Ω–æ–ø–∫–∏, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤—Å–µ–≥–¥–∞.
# –°–ª–µ–¥–æ–º —É–∂–µ –Ω—É–∂–Ω—ã–µ –º–Ω–µ –¥–∞–Ω–Ω—ã–µ.
category_cb = CallbackData('category', 'id', 'action')

@dp.message_handler(IsAdmin(), text=settings)
async def process_settings(message: Message):
    
    # –°–æ–∑–¥–∞—é –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
    markup = InlineKeyboardMarkup()
    
    # –î–µ–ª–∞—é –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –ø–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π,
    # –∏–∑ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑–≤–ª–µ–∫–∞—é –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ
    # –∏ —Ä–∞—Å–∫–∏–¥—ã–≤–∞—é –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –∫–Ω–æ–ø–∫–∞–º.
    for idx, title in db.fetchall('SELECT * FROM categories'):
        # –ß–µ—Ä–µ–∑ action 'view' —Å–≤—è–∂–µ–º—Å—è —Å –¥—Ä—É–≥–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º,
        # –ö–æ—Ç–æ—Ä—ã–π –ø–æ ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–µ—Ä–µ–π–¥–µ—Ç –∫ —Ç–∞–±–ª–∏—Ü–µ –∏ —Å–∫–∞–∂–µ—Ç,
        # —á—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
        markup.add(InlineKeyboardButton(
            title, callback_data=category_cb.new(id=idx, action='view')))
    
    # –¢—É—Ç —Ç–∞–∫ –∂–µ –ø—Ä–∏–≤—è–∑—ã–≤–∞—é —É–∫–∞–∑–∞—Ç–µ–ª—å add_category, –∏ –Ω–∏–∂–µ –ø–æ –∫–æ–¥—É
    # –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–∞–∫–æ–≥–æ —É–∫–∞–∑–∞—Ç–µ–ª—è.
    markup.add(InlineKeyboardButton(
        '+ –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', callback_data='add_category'))
    
    await message.answer('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', reply_markup=markup)


# –°–æ–∑–¥–∞—é –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —É–¥–∞–ª—è—é –ø—Ä–æ—à–ª–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º,
# –∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–µ—Ä–µ–∫–ª—é—á–∞—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ title.
@dp.callback_query_handler(IsAdmin(), text='add_category')
async def add_category_callback_handler(query: CallbackQuery):
    await query.message.delete()
    await query.message.answer('–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏?')
    await CategoryState.title.set()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Ö–≤–∞—Ç–≤—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ tittle, –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
# –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏,
# –∞ –∑–∞—Ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è id –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
@dp.message_handler(IsAdmin(), state=CategoryState.title)
async def set_category_title_handler(message: Message, state: FSMContext):
    
    category_title = message.text
    idx = md5(category_title.encode('utf-8')).hexdigest()
    # –ó–∞–ø—É—Å–∫–∞—é SQL-–∑–∞–ø—Ä–æ—Å —Å –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–æ–π –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ id.
    db.query('INSERT INTO categories VALUES (?, ?)', (idx, category_title))
    
    # –í—ã—Ö–æ–∂—É –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è title.
    await state.finish()
    await process_settings(message)


@dp.callback_query_handler(IsAdmin(), category_cb.filter(action='view'))
async def category_callback_handler(query: CallbackQuery, callback_data: dict,
                                    state: FSMContext):
    
    category_idx = callback_data['id']
    
    # –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è product –¥–æ–±–∞–≤–ª–µ–Ω–∞ –¥–ª—è... –ß–∏—Ç–∞–µ–º–æ—Å—Ç–∏??
    products = db.fetchall('''SELECT * FROM products product
WHERE product.tag = (SELECT title FROM categories WHERE idx=?)''',
                           (category_idx,))
    
    await query.message.delete()
    await query.answer('–í—Å–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –≤ —ç—Ç—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é')
    # –ù–µ –æ—á–µ–Ω—å –ø–æ–Ω–∏–º–∞—é, –∑–∞—á–µ–º –≤ –ø—Ä–∏–º–µ—Ä–µ –Ω—É–∂–Ω—ã —ç—Ç–∏ 2 —Å—Ç—Ä–æ–∫–∏
    # await state.update_data(category_index=category_idx)
    # await show_products(query.message, products, category_idx)
    await show_products(query.message, products)


# –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø—Ä–∏ –ø—Ä–æ–≤–∞–ª–∏–≤–∞–Ω–∏–∏ –≤ –∫–Ω–æ–ø–∫—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π.

# –í—Å–µ –Ω—É–∂–Ω—ã–µ –¥–ª—è —ç—Ç–æ–≥–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
# –ö–æ–ª–±—ç–∫ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É.
product_cb = CallbackData('product', 'id', 'action')

cancel_message = 'üö´ –û—Ç–º–µ–Ω–∏—Ç—å'
add_product = '‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä'
delete_category = 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é'


# –ü–æ–∫–∞ —É–¥–∞–ª–∏–ª category_idx
# async def show_products(message: Message, products: List[Tuple], category_idx):
async def show_products(message: Message, products: List[Tuple]):
    await bot.send_chat_action(message.chat.id, ChatActions.TYPING)
    
    for idx, title, body, image, price, in products:
        text = f'<b>{title}</b>\n\n{body}\n\n–¶–µ–Ω–∞: {price} —Ä—É–±–ª–µ–π.'
        
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(\
            'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å',
            callback_data=product_cb.new(id=idx, action='delete')))
        await message.answer_photo(photo=image,
                             caption=text,
                             reply_makrup=markup)
        
    markup = ReplyKeyboardMarkup()
    markup.add(add_product)
    markup.add(delete_category)
    
    await message.answer('–•–æ—Ç–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –¥–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å?',
                   reply_markup=markup)
